name: full-build-test

on:

  pull_request:
    branches:
      - develop
      - 'v[0-9]+.[0-9]+'

concurrency:
  group: lock-${{ github.ref }}
  cancel-in-progress: true

env:
  WORKSPACE_PATH: ${{ github.workspace }}
  COMMIT_ID: ${{ github.sha }}
  BUILD_NUMBER: ${{ github.run_number }}
  BRANCH: ${{ github.ref_name }}
  REPO_OWNER: ${{ github.repository_owner }}
  REPO: ${{ github.event.repository.name }}
  GH_TOKEN: ${{ secrets.gh_token }}
  AWS_REGION: us-east-1

jobs:

  initiate-workflow:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    outputs:
      label-arm: ${{ steps.start-arm-runner.outputs.label }}
      arm-instance-id: ${{ steps.start-arm-runner.outputs.ec2-instance-id }}
      label-amd: ${{ steps.start-amd-runner.outputs.label }}
      amd-instance-id: ${{ steps.start-amd-runner.outputs.ec2-instance-id }}
      runners_matrix: ${{ steps.runners-matrix.outputs.runners_matrix }}

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.CI_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.CI_AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Start AMD runner
      id: start-amd-runner
      uses: Amir-civ/ec2-github-runner@v2
      with:
        mode: start
        github-token: ${{ secrets.gh_token }}
        ec2-image-id: ami-0709e48fc2257176b
        ec2-instance-type: c5.2xlarge
        subnet-id: subnet-0ea80778fd45e76a0
        security-group-id: sg-095940a96979f1b1d
        runnerUser: ubuntu

    - name: Start ARM runner
      id: start-arm-runner
      uses: Amir-civ/ec2-github-runner@v2
      with:
        mode: start
        github-token: ${{ secrets.gh_token }}
        ec2-image-id: ami-0111efac66ad5af90
        ec2-instance-type: c6g.2xlarge
        subnet-id: subnet-0ea80778fd45e76a0
        security-group-id: sg-095940a96979f1b1d
        runnerUser: ubuntu

    - name: Set Runners Matrix
      id: runners-matrix
      run: |
        RUNNERS_MATRIX="{\"include\":[{\"name\":\"arm-full-build-test\",\"label\":\"${{ steps.start-arm-runner.outputs.label || steps.manual-input.outputs.label-arm }}\"},{\"name\":\"amd-full-build-test\",\"label\":\"${{ steps.start-amd-runner.outputs.label || steps.manual-input.outputs.label-amd }}\"}]}"
        echo "runners_matrix=${RUNNERS_MATRIX}" >> $GITHUB_OUTPUT

  full-build-test:
    needs: initiate-workflow # required to start the main job when the runner is ready
    strategy:
      matrix: ${{fromJson(needs.initiate-workflow.outputs.runners_matrix)}}    
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.label }}
    timeout-minutes: 60
    steps:
      - name: Clone Repos
        run: |
          mkdir ros_ws && cd ros_ws
          sudo curl -u "Amir-civ:$GH_TOKEN" -L https://raw.githubusercontent.com/${{ env.REPO_OWNER }}/civros-release/$BRANCH/repo.csv -o ./repo.csv
          if [ $? -eq 0 ]; then
              echo "repo.csv file downloaded successfully!"
          else
            echo "Failed to download repo.csv file."
          fi
          
          while IFS=, read -r repo || [ -n "$repo" ]; do
            git clone https://Amir-civ:${{ secrets.GH_TOKEN }}@github.com/${{ env.REPO_OWNER }}/$repo.git
          done < repo.csv

      - name: Checkout branches
        run: |
          cd ros_ws
          target_branch_name=${{ github.event.pull_request.base.ref }}
          base_branch_name=${{ github.head_ref }}
      
          echo "triggered branch: $target_branch_name"
          echo "base_branch_name: $base_branch_name"
          while IFS=, read -r repo || [ -n "$repo" ]; do
            echo "Current directory: $(pwd)"
            ls
            echo "entering: $repo"
            cd "$repo"
            if [[ "$repo" = "$REPO" ]]; then
              echo "Repo is $repo_name, checking out to base branch"
              git checkout $base_branch_name
            else
              echo "Checking out to target branch"
              git checkout $target_branch_name
            fi
            cd ..
          done < repo.csv

      - name: Full build test
        run: |
          cd ros_ws
          source /opt/ros/galactic/setup.bash
          colcon build
          
      - name: Post to a Slack channel
        if: ${{ always() }}
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          # You can pass in multiple channels to post to by providing a comma-delimited list of channel IDs.
          channel-id: 'C051SPVTW2Z'
          # For posting a simple plain text message
          slack-message: "GitHub build result: ${{ job.status }}\nWorkflow: ${{ github.job }}\nRepository: ${{ github.event.repository.name }}\nBase_Branch:${{ github.head_ref }}\nTarget Branch: ${{ github.event.pull_request.base.ref }}\nBuild Number: ${{ github.run_number }}\nLink:${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  stop-runners:
    needs: [initiate-workflow, full-build-test]
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    if: always() && (needs.initiate-workflow.outputs.label-amd != null || needs.initiate-workflow.outputs.label-arm != null)
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.CI_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CI_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Stop AMD runner
        uses: Amir-civ/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.gh_token }}
          label: ${{ needs.initiate-workflow.outputs.label-amd }}
          ec2-instance-id: ${{ needs.initiate-workflow.outputs.amd-instance-id }}

      - name: Stop ARM runner
        uses: Amir-civ/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.gh_token }}
          label: ${{ needs.initiate-workflow.outputs.label-arm }}
          ec2-instance-id: ${{ needs.initiate-workflow.outputs.arm-instance-id }}